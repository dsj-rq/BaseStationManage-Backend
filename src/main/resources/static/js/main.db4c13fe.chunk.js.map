{"version":3,"sources":["api/index.js","api/user.js","util/commonUtil.js","redux/constants/userActionType.js","redux/actions/userAction.js","components/login.jsx","api/baseStation.js","components/module/datareport.jsx","redux/actions/stationAction.js","redux/constants/stationActionType.js","components/module/leftmenu.jsx","components/index.jsx","App.js","serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/index.js","index.js","redux/store/configureStore.js"],"names":["get","url","params","paramsArray","Object","keys","forEach","key","push","search","join","fetch","method","credentials","headers","accept","then","res","json","post","data","body","JSON","stringify","URL","logins","userInfo","username","password","Apilogout","ApigetCurrentUserInfo","ApigetUserList","ApiAddUser","ApiDeleteUser","ApiUpdateUser","commonAction","dispatch","api","paramJson","callback","actionType","response","s","type","catch","error","console","log","logout","getCurrentUserInfo","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","componentDidMount","onFinish","values","that","props","login","history","onFinishFailed","errorInfo","state","className","name","initialValues","remember","this","size","Item","label","rules","required","message","Password","htmlType","React","Component","withRouter","connect","o","fn","ApistatisticByProvince","ApistatisticByType","ApistatisticByPrecision","ApistatisticByMnc","ApistatisticByDate","ApiinsertBaseStation","ApigetListByBounds","Datareport","renderDate","statisticByDate","xyData","getXyData","renderBar","x","y","statisticByProvince","tempData","sort","a","b","cnt","renderAreaStatic","statisticByType","setState","staTypeData","statisticByMnc","staMncData","statisticByPrecision","staPrecisionData","setTimeout","renderPie","xKey","yKey","xData","yData","map","d","title","id","yName","echarts","init","document","getElementById","setOption","text","tooltip","trigger","axisPointer","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","itemStyle","color","graphic","LinearGradient","emphasis","getPieData","staData","pieData","i","value","center","subtext","top","textAlign","formatter","radius","animation","show","timeData","style","height","TabPane","MncMap","Leftmenu","updateUserList","getUserList","userList","handleAdd","addUserModal","addUserFunc","flag","u","account","trim","addUser","rsp","handleAddStation","addStationModal","addStationFunc","mnc","mcc","olng","lng","olat","lat","BMap","window","Date","updateDate","getFullYear","getMonth","getDate","addStation","panTo","Point","showStationByMapView","menuList","val","updateUser","stationList","width","currentUser","STATION_LIST_COLUMNS","dataIndex","fixed","render","t","record","danger","USER_LIST_COLUMNS","LockOutlined","checked","onClick","c","updateUserInfo","deleteUser","userId","pagination","defaultActiveKey","tab","TeamOutlined","marginBottom","rowKey","r","scroll","columns","dataSource","GlobalOutlined","AreaChartOutlined","footer","visible","onCancel","defaultValue","disabled","Group","Button","mapConst","BMAP_POINT_SHAPE_STAR","BMAP_ANCHOR_TOP_LEFT","BMAP_POINT_SHAPE_WATERDROP","BMAP_POINT_SHAPE_RHOMBUS","BMAP_ANCHOR_BOTTOM_LEFT","BMAP_POINT_SIZE_BIGGER","circleOverlay","Index","Map","centerAndZoom","enableScrollWheelZoom","Size","scaleControl","NavigationControl","anchor","addControl","CityListControl","onChangeAfter","bindMapEvent","addEventListener","e","target","getZoom","showPrecision","getListByBounds","getMapBounds","length","warn","bs","getBounds","bssw","getSouthWest","bsne","getNorthEast","minLon","maxLon","minLat","maxLat","renderMarker","points","clearOverlays","point","station","addOverlay","Circle","precision","fillColor","strokeWeight","fillOpacity","strokeOpacity","enableEditing","options","shape","pointCollection","PointCollection","opts","content","address","lac","cell","infoWindow","InfoWindow","openInfoWindow","tabWidth","App","setInterval","Fragment","path","Boolean","location","hostname","match","LOGIN_PATH","href","indexOf","appReducer","combineReducers","user","action","createHistory","require","createHashHistory","store","createStore","applyMiddleware","thunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gXAAaA,EAAM,SAACC,EAAKC,GACrB,GAAIA,EAAQ,CACR,IAAIC,EAAc,GAElBC,OAAOC,KAAKH,GAAQI,SAAQ,SAAAC,GAAG,OAAIJ,EAAYK,KAAKD,EAAM,IAAML,EAAOK,QAC7C,IAAtBN,EAAIQ,OAAO,MACXR,GAAO,IAAME,EAAYO,KAAK,KAE9BT,GAAO,IAAME,EAAYO,KAAK,KAGtC,OAAOC,MAAMV,EAAK,CACdW,OAAQ,MACRC,YAAa,UACbC,QAAS,CACLC,OAAQ,sBAEbC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAEVC,EAAO,SAAClB,EAAKmB,GACtB,OAAOT,MAAMV,EAAK,CACdW,OAAQ,OACRC,YAAa,UACbC,QAAS,CACL,eAAgB,mBAChBC,OAAQ,oBAEZM,KAAMC,KAAKC,UAAUH,MCzBvBI,EAAM,gCAICC,EAAS,SAACC,GACrB,OAAOP,EAAKK,EAAI,mBAAD,OAAoBE,EAASC,SAA7B,qBAAkDD,EAASE,UAAW,KAG1EC,EAAY,WACvB,OAAOV,EAAKK,EAAI,UAAU,KAGfM,EAAsB,WACjC,OAAO9B,EAAIwB,EAAI,kCAAkC,KAGtCO,EAAe,WAC1B,OAAO/B,EAAIwB,EAAI,oBAAoB,KAGxBQ,EAAW,SAACZ,GACvB,OAAOD,EAAKK,EAAI,uBAAuBJ,IAG5Ba,EAAc,SAACb,GAC1B,OAAOpB,EAAIwB,EAAI,0BAA0BJ,IAG9Bc,EAAc,SAACd,GAC1B,OAAOpB,EAAIwB,EAAI,0BAA0BJ,IC7B9Be,EAAe,SAACC,EAASC,EAAIC,EAAUC,EAASC,GACzDH,EAAIC,GAAWtB,MAAK,SAAAyB,GAChB,GAAGA,EAASC,GAAoB,OAAfD,EAASC,EAAY,CAClC,GAAiB,MAAdD,EAASC,EAKR,YAJAN,EAAS,CACLO,KCQW,kBDPXvB,KAAK,IAIb,GAAiB,KAAdqB,EAASC,EAKR,YAJAN,EAAS,CACLO,KCKkB,yBDJlBvB,KAAK,IAMjBgB,EAAS,CACLO,KAAKH,EACLpB,KAAKqB,IAETF,GAAYA,EAASE,MACtBG,OAAM,SAAAC,GAAQC,QAAQC,IAAI,QAAQF,OEZ5BG,EAAU,SAAC5B,EAAKmB,GACzB,OAAO,SAACH,GAAD,OAAYD,EAAaC,EAASP,EAAUT,EAAKmB,EDRjC,iBCUdU,EAAqB,SAAC7B,EAAKmB,GACpC,OAAO,SAACH,GAAD,OAAYD,EAAaC,EAASN,EAAsBV,EAAKmB,EDPxC,sBEJ1BW,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAElBE,EAAa,CACfD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAG7BI,E,kDACF,aAAe,IAAD,8BACV,gBAGJC,kBAAoB,aAJN,EAQdC,SAAW,SAACC,GACR,IAAIC,EAAI,eACR,EAAKC,MAAMC,MAAMH,GAAQ,SAAC1C,GACtB2C,EAAKC,MAAME,QAAQvD,KAAK,cAXlB,EAedwD,eAAiB,SAACC,GACdnB,QAAQC,IAAI,UAAWkB,IAdvB,EAAKC,MAAQ,GAFH,E,qDAoBV,OAAQ,yBAAKC,UAAW,aACnB,yBAAKA,UAAU,WAAf,wCACD,uCACQjB,EADR,CAEIkB,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUa,KAAKb,SACfM,eAAgBO,KAAKP,eACrBQ,KAAM,UAEN,sBAAMC,KAAN,CACIC,MAAM,qBACNN,KAAK,WACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2CAEnC,6BAGJ,sBAAMJ,KAAN,CACIC,MAAM,eACNN,KAAK,WACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCAEnC,sBAAOC,SAAP,OAEJ,sBAAML,KAASnB,EACX,uBAAQX,KAAK,UAAUoC,SAAS,UAAhC,uB,GA/CAC,IAAMC,WAoEXC,cAAWC,aAZF,SAACjB,GACrB,OAAO,eAAKA,MAGW,SAAC9B,GACxB,MAAO,CACH0B,MAAO,SAACsB,EAAGC,GDlEG,IAACjE,EAAKmB,ECmEhBH,GDnEWhB,ECmEIgE,EDnEC7C,ECmEE8C,EDlEnB,SAACjD,GAAD,OAAYD,EAAaC,EAASX,EAAOL,EAAKmB,EDT/B,qBEgFA4C,CAA6C3B,I,0BCjFjEhC,EAAM,mDAWC8D,EAAyB,SAAClE,GACnC,OAAOpB,EAAIwB,EAAG,uBAA2BJ,IAGhCmE,EAAqB,SAACnE,GAC/B,OAAOpB,EAAIwB,EAAG,mBAAuBJ,IAG5BoE,EAA0B,SAACpE,GACpC,OAAOpB,EAAIwB,EAAG,wBAA4BJ,IAGjCqE,EAAoB,SAACrE,GAC9B,OAAOpB,EAAIwB,EAAG,kBAAsBJ,IAG3BsE,EAAqB,SAACtE,GAC/B,OAAOpB,EAAIwB,EAAG,mBAAuBJ,IAO5BuE,EAAuB,SAACvE,GACjC,OAAOD,EAAKK,EAAG,qBAAyBJ,IAM/BwE,EAAqB,SAACxE,GAC/B,OAAOpB,EAAIwB,EAAG,mBAAuBJ,I,qOC/BnCyE,I,qFACF,aAAe,IAAD,8BACV,gBAQJpC,kBAAoB,WAEhB,EAAKqC,cAXK,EAgBdA,WAAa,WACT,IAAIlC,EAAI,eACR,EAAKC,MAAMkC,gBAAgB,IAAI,YAAe,IAAZ3E,EAAW,EAAXA,KAC1B4E,EAASpC,EAAKqC,UAAU7E,EAAM,cAAe,OACjDwC,EAAKsC,UAAU,mDAAY,YAAaF,EAAOG,EAAGH,EAAOI,EAAG,mBAEhE,EAAKvC,MAAMwC,oBAAoB,IAAG,YAAW,IACrCC,EADoC,EAARlF,KACZmF,MAAK,SAACC,EAAEC,GAAK,OAAOD,EAAEE,IAAID,EAAEC,OAC5CV,EAASpC,EAAKqC,UAAUK,EAAU,WAAY,OAClD,EAAKK,iBAAiB,2BAAO,WAAWX,EAAOG,EAAEH,EAAOI,EAAE,mBAE9D,EAAKvC,MAAM+C,gBAAgB,IAAI,YAAe,IAAZxF,EAAW,EAAXA,KAC1B4E,EAASpC,EAAKqC,UAAU7E,EAAM,OAAQ,OAC1C,EAAKyF,SAAS,CAAEC,YAAad,IAC7B,EAAKnC,MAAMkD,eAAe,IAAI,YAAe,IAAZ3F,EAAW,EAAXA,KACzB4E,EAASpC,EAAKqC,UAAU7E,EAAM,MAAO,OACzC,EAAKyF,SAAS,CAAEG,WAAYhB,IAC5B,EAAKnC,MAAMoD,qBAAqB,IAAI,YAAe,IAAZ7F,EAAW,EAAXA,KAC/B4E,EAASpC,EAAKqC,UAAU7E,EAAM,YAAa,OAC/C,EAAKyF,SAAS,CAAEK,iBAAkBlB,IAClCmB,YAAW,WAAO,IAAD,EACyC,EAAKjD,MAAnD4C,EADK,EACLA,YAAaE,EADR,EACQA,WAAYE,EADpB,EACoBA,iBACjC,EAAKE,UAAU,UAAWN,EAAaE,EAAYE,KACpD,eAvCL,EAiDdjB,UAAY,SAAC7E,EAAMiG,EAAMC,GACrB,IAAIC,EAAQ,GACRC,EAAQ,GAKZ,OAJApG,EAAKqG,KAAI,SAAAC,GACLH,EAAM/G,KAAKkH,EAAEL,IACbG,EAAMhH,KAAKkH,EAAEJ,OAEV,CACHnB,EAAGoB,EACHnB,EAAGoB,IA1DG,EA8Ddb,iBAAmB,SAACgB,EAAOC,EAAIL,EAAOC,EAAOK,GAE3BC,KAAQC,KAAKC,SAASC,eAAeL,IAE3CM,UAAU,CACdP,MAAO,CACHQ,KAAMR,GAEVS,QAAS,CACLC,QAAS,OACTC,YAAa,CACT3F,KAAM,WAGd4F,KAAM,CACFC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAElBC,MAAO,CACHjG,KAAM,QACNkG,YAAa,CAAC,EAAG,MAErBC,MAAO,CACHnG,KAAM,WACNvB,KAAMmG,GAEVwB,OAAQ,CACJ,CACI3E,KAAMyD,EACNlF,KAAM,MACNvB,KAAKoG,OA9FP,EAoGdtB,UAAY,SAACyB,EAAOC,EAAIL,EAAOC,EAAOK,GAEpBC,KAAQC,KAAKC,SAASC,eAAeL,IAE3CM,UAAU,CACdP,MAAO,CAAEQ,KAAMR,GACfS,QAAS,GACTQ,MAAO,CACHxH,KAAMmG,GAEVuB,MAAO,GACPC,OAAQ,CAAC,CACL3E,KAAMyD,EACNlF,KAAM,MACNqG,UAAW,CACPC,MAAO,IAAInB,KAAQoB,QAAQC,eACvB,EAAG,EAAG,EAAG,EACT,CACI,CAAE5F,OAAQ,EAAG0F,MAAO,WACpB,CAAE1F,OAAQ,GAAK0F,MAAO,WACtB,CAAE1F,OAAQ,EAAG0F,MAAO,cAIhCG,SAAU,CACNJ,UAAW,CACPC,MAAO,IAAInB,KAAQoB,QAAQC,eACvB,EAAG,EAAG,EAAG,EACT,CACI,CAAE5F,OAAQ,EAAG0F,MAAO,WACpB,CAAE1F,OAAQ,GAAK0F,MAAO,WACtB,CAAE1F,OAAQ,EAAG0F,MAAO,eAKpC7H,KAAMoG,GACP,CACCpD,KAAMyD,EACNlF,KAAM,OACNvB,KAAMoG,OA5IJ,EAiJdJ,UAAY,SAACQ,EAAId,EAAaE,EAAYE,GAEtC,SAASmC,EAAWC,GAChB,IAAIC,EAAU,GAId,OAHAD,EAAQnD,EAAEsB,KAAI,SAACtB,EAAGqD,GACdD,EAAQ/I,KAAK,CAAEiJ,MAAOH,EAAQlD,EAAEoD,GAAIpF,KAAM+B,OAEvCoD,EAGX,IAEIG,EAAS,CAAC,MAAO,OAFP5B,KAAQC,KAAKC,SAASC,eAAeL,IAI3CM,UAAU,CACdP,MAAO,CACH,CACIQ,KAAM,kCACP,CACCwB,QAAS,uCACTnB,KAAM,SACNoB,IAAK,MACLC,UAAW,UACZ,CACCF,QAAS,6CACTnB,KAAM,MACNoB,IAAK,MACLC,UAAW,UACZ,CACCF,QAAS,uCACTnB,KAAM,SACNoB,IAAK,MACLC,UAAW,WAGnBzB,QAAS,CACLC,QAAS,OACTyB,UAAW,6BAEff,OAAQ,CACJ,CACI3E,KAAM,uCACNzB,KAAM,MACNoH,OAhCC,MAiCDL,OAAQA,EACRtI,KAAMiI,EAAWvC,GACjBkD,WAAW,EACXtF,MAAO,CACHuF,MAAM,GAEVzB,KAAM,EACNC,MAAO,WACPmB,IAAK,EACLlB,OAAQ,GACT,CACCtE,KAAM,6CACNzB,KAAM,MACNoH,OA9CC,MA+CDL,OAAQA,EACRtI,KAAMiI,EAAWrC,GACjBgD,WAAW,EACXtF,MAAO,CACHuF,MAAM,GAEVzB,KAAM,WACNC,MAAO,WACPmB,IAAK,EACLlB,OAAQ,GACT,CACCtE,KAAM,uCACNzB,KAAM,MACNoH,OA5DC,MA6DDL,OAAQA,EACRtI,KAAMiI,EAAWnC,GACjB8C,WAAW,EACXtF,MAAO,CACHuF,MAAM,GAEVzB,KAAM,WACNC,MAAO,EACPmB,IAAK,EACLlB,OAAQ,OAhOpB,EAAKxE,MAAQ,CACTgG,SAAU,GACVpD,YAAa,GACbE,WAAY,GACZE,iBAAkB,IANZ,E,qDAyOJ,IAAD,EACiD3C,KAAKL,MADtD,EACG4C,YADH,EACgBE,WADhB,EAC4BE,iBACjC,OAAQ,yBAAK/C,UAAW,cACpB,yBAAKgG,MAAO,CAAEC,OAAQ,KAAOjG,UAAU,cAAcyD,GAAG,aACxD,yBAAKzD,UAAU,cAAcyD,GAAG,cAChC,yBAAKuC,MAAO,CAAEC,OAAQ,KAAOjG,UAAU,cAAcyD,GAAG,iB,GA/O3C5C,IAAMC,YA8QhBC,eAAWC,aAzBF,SAACjB,GACrB,OAAO,eAAKA,MAGW,SAAC9B,GACxB,MAAO,CACH2D,gBAAiB,SAACX,EAAGC,GC9NG,IAACjE,EAAKmB,ED+N1BH,GC/NqBhB,ED+NIgE,EC/NC7C,ED+NE8C,EC9N7B,SAACjD,GAAD,OAAYD,EAAaC,EAASsD,EAAmBtE,EAAKmB,ECjBpC,yBFiPzBqE,gBAAiB,SAACxB,EAAGC,GC1OG,IAACjE,EAAKmB,ED2O1BH,GC3OqBhB,ED2OIgE,EC3OC7C,ED2OE8C,EC1O7B,SAACjD,GAAD,OAAYD,EAAaC,EAASmD,EAAmBnE,EAAKmB,ECpBpC,yBFgQzBwE,eAAgB,SAAC3B,EAAGC,GCvOG,IAACjE,EAAKmB,EDwOzBH,GCxOoBhB,EDwOIgE,ECxOC7C,EDwOE8C,ECvO5B,SAACjD,GAAD,OAAYD,EAAaC,EAASqD,EAAkBrE,EAAKmB,EClBpC,wBF2PxB0E,qBAAsB,SAAC7B,EAAGC,GC7OG,IAACjE,EAAKmB,ED8O/BH,GC9O0BhB,ED8OIgE,EC9OC7C,ED8OE8C,EC7OlC,SAACjD,GAAD,OAAYD,EAAaC,EAASoD,EAAwBpE,EAAKmB,ECnBpC,8BFkQ9B8D,oBAAqB,SAACjB,EAAGC,GCtPG,IAACjE,EAAKmB,EDuP9BH,GCvPyBhB,EDuPIgE,ECvPC7C,EDuPE8C,ECtPjC,SAACjD,GAAD,OAAYD,EAAaC,EAASkD,EAAuBlE,EAAKmB,ECrBpC,gCFiRX4C,CAA6CU,KG3QjE3C,GAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,GAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAEzBiH,G,KAAAA,QACFC,GAAS,CACb,KAAM,eACN,KAAM,eACN,GAAM,gBAGFC,G,kDACJ,aAAe,IAAD,8BACZ,gBAQF9G,kBAAoB,WAClB,EAAK+G,kBAVO,EAadA,eAAiB,WACf,EAAK3G,MAAM4G,YAAY,IAAI,YAAe,IAAZrJ,EAAW,EAAXA,KAC5B,EAAKyF,SAAS,CAAE6D,SAAUtJ,GAAQ,SAfxB,EAmBduJ,UAAY,WACV,EAAK9D,SAAS,CAAE+D,cAAc,KApBlB,EAuBd5H,OAAS,WACP,EAAKa,MAAMb,OAAO,IAAI,gBAxBV,EAuCd6H,YAAc,SAAClH,GAAY,IACjB+G,EAAa,EAAKxG,MAAlBwG,SACJI,GAAO,EACXJ,EAASjD,KAAI,SAAAsD,GACPA,EAAEC,SAAWrH,EAAOhC,SAASsJ,SAC/BH,GAAO,MAGJA,GAIP,EAAKjH,MAAMqH,QAAQvH,GAAQ,SAACwH,GAE1B,EAAKX,oBAEP,EAAK3D,SAAS,CAAE+D,cAAc,KAP5B,IAAQ/H,MAAM,+CAhDJ,EA0DduI,iBAAmB,WACjB,EAAKvE,SAAS,CAAEwE,iBAAiB,KA3DrB,EA6DdC,eAAiB,SAAC3H,GACVA,EAAO4H,MACX5H,EAAO4H,IAAM,MAET5H,EAAOhB,OACXgB,EAAOhB,KAAO,MAEhBgB,EAAO6H,IAAI,MACX7H,EAAO8H,KAAM9H,EAAO+H,IACpB/H,EAAOgI,KAAMhI,EAAOiI,IATO,IAUnBC,EAASC,OAATD,KACJnE,EAAI,IAAIqE,KACZpI,EAAOqI,WAAYtE,EAAEuE,cAAc,KAAKvE,EAAEwE,WAAW,GAAG,IAAIxE,EAAEyE,UAC9D,EAAKtI,MAAMuI,WAAWzI,GAAO,SAACwH,GAC5BhE,YAAW,WACT,EAAKtD,MAAM4D,IAAI4E,MAAM,IAAIR,EAAKS,MAAM3I,EAAO+H,IAAI/H,EAAOiI,MACtDzE,YAAW,WACT,EAAKtD,MAAM0I,yBACX,OACF,MACF,EAAK1F,SAAS,CAAEwE,iBAAiB,QA/EnC,EAAKnH,MAAQ,CACXwG,SAAU,GACV8B,SAAU,GACV5B,cAAc,EACdS,iBAAiB,GANP,E,2DA6BCzD,EAAIrH,EAAKkM,GAAM,IAAD,OACjB,GAAN7E,EAIJrD,KAAKV,MAAM6I,WAAW,CAAE9E,GAAIA,EAAIrH,IAAKA,EAAKkM,IAAKA,IAAO,WACpD,EAAKjC,oBAJL,IAAQ3H,MAAM,8E,+BAsDR,IAAD,SACqC0B,KAAKV,MAAzC8I,EADD,EACCA,YAAaC,EADd,EACcA,MAAOC,EADrB,EACqBA,YADrB,EAE6CtI,KAAKL,MAAjDwG,EAFD,EAECA,SAAUE,EAFX,EAEWA,aAAcS,EAFzB,EAEyBA,gBAC1ByB,EAAuB,CAC3B,CACEnF,MAAO,mDACPoF,UAAW,MACXxM,IAAK,MACLyM,MAAO,OACPJ,MAAO,IACPK,OAAQ,WACN,MAAO,iBAGX,CACEtF,MAAO,mDACPoF,UAAW,MACXxM,IAAK,MACLyM,MAAO,OACPJ,MAAO,IACPK,OAAQ,SAACC,GACP,OAAO5C,GAAO4C,IAAM,iBAGxB,CACEvF,MAAO,iBACPoF,UAAW,OACXxM,IAAK,OACLqM,MAAO,KAET,CACEjF,MAAO,2BACPoF,UAAW,YACXxM,IAAK,YACLqM,MAAO,IACPK,OAAQ,SAACC,GACP,MAAM,GAAN,OAAUA,EAAV,YAGJ,CACEvF,MAAO,2BACPoF,UAAW,UACXxM,IAAK,UACLqM,MAAO,KAET,CACEjF,MAAO,eACPoF,UAAW,YACXxM,IAAK,YACLqM,MAAO,IACPK,OAAQ,SAAC9E,EAAMgF,GACb,OAAQ,uBAAQ3I,KAAM,QAAS4I,QAAM,GAA7B,mBAIRC,EAAoB,CACxB,CACE1F,MAAO,qBACPoF,UAAW,WACXxM,IAAK,WACLyM,MAAO,OACPJ,MAAO,KAET,CACEjF,MAAO,eACPoF,UAAW,UACXxM,IAAK,UACLyM,MAAO,OACPJ,MAAO,KAET,CACEjF,MAAO,eACPoF,UAAW,WACXxM,IAAK,WACLqM,MAAO,GACPK,OAAQ,WACN,OAAQ,kBAACK,GAAA,EAAD,QAGZ,CACE3F,MAAO,uCACPoF,UAAW,SACXxM,IAAK,SACLqM,MAAO,IACPK,OAAQ,SAAC9E,EAAMgF,GACb,OAAQ,wBAAQ3I,KAAM,QAAS+I,QAAiB,GAARpF,EAAWqF,QAAS,SAACC,GAC3D,EAAKC,eAAeP,EAAOvF,GAAI,QAAS6F,QAI9C,CACE9F,MAAO,2BACPoF,UAAW,UACXxM,IAAK,UACLqM,MAAO,IACPK,OAAQ,SAAC9E,EAAMgF,GACb,OAAQ,wBAAQ3I,KAAM,QAAS+I,QAASpF,EAAMqF,QAAS,SAACC,GACtD,EAAKC,eAAeP,EAAOvF,GAAI,UAAW6F,EAAI,EAAI,QAIxD,CACE9F,MAAO,2BACPoF,UAAW,mBACXxM,IAAK,mBACLqM,MAAO,IACPK,OAAQ,SAAC9E,EAAMgF,GACb,OAAQ,wBAAQ3I,KAAM,QAAS+I,SAAYpF,EAAMqF,QAAS,SAACC,GACzD,EAAKC,eAAeP,EAAOvF,GAAI,qBAAsB6F,EAAI,EAAI,QAInE,CACE9F,MAAO,eACPoF,UAAW,YACXxM,IAAK,YACLqM,MAAO,IACPK,OAAQ,SAAC9E,EAAMgF,GACb,OAAQ,uBAAQK,QAAS,WACN,GAAbL,EAAOvF,GAIX,EAAK/D,MAAM8J,WAAW,CAAEC,OAAQT,EAAOvF,KAAM,WAC3C,EAAK4C,oBAJL,IAAQ3H,MAAM,6EAMf2B,KAAM,QAAS4I,QAAM,GARhB,mBAYRS,EAAa,CACjBrJ,KAAM,SAKR,OAHAmI,EAAYlF,KAAI,SAAC/E,EAAG8G,GAClB9G,EAAC,IAAU8G,KAEL,yBAAKrF,UAAW,WAAYgG,MAAO,CAAEyC,MAAOA,IAClD,yBAAKzI,UAAW,SAAhB,oDAAkC,0BAAMA,UAAU,aAAhB,wCAAoC0I,GAAeA,EAAYlL,SAAS,0BAAMwC,UAAU,YAAYqJ,QAAS,WAAQ,EAAKxK,WAAlD,oBAC1G,wBAAM8K,iBAAiB,IAAItJ,KAAM,SAC/B,kBAAC6F,GAAD,CACE0D,IAAK,kCAAO,kBAACC,GAAA,EAAD,MAAP,8BACLzN,IAAI,KAEJ,uBAAQiN,QAASjJ,KAAKoG,UAAWhI,KAAK,UAAUwH,MAAO,CAAE8D,aAAc,KAAvE,gBAGA,wBAAOJ,WAAYA,EAAYK,OAAQ,SAACC,GAAQ,OAAOA,EAAEvG,IAAMwG,OAAQ,CAAEjI,EAAG,KAAOkI,QAAShB,EAAmBiB,WAAY5D,KAE7H,kBAACL,GAAD,CACE0D,IAAK,kCAAO,kBAACQ,GAAA,EAAD,MAAP,8BACLhO,IAAI,KAEJ,uBAAQiN,QAASjJ,KAAK6G,iBAAkBzI,KAAK,UAAUwH,MAAO,CAAE8D,aAAc,KAA9E,gBASA,wBAAOJ,WAAYA,EAAYO,OAAQ,CAAEjI,EAAG,KAAOkI,QAASvB,EAAsBwB,WAAY3B,KAEhG,kBAACtC,GAAD,CACE0D,IAAK,kCAAO,kBAACS,GAAA,EAAD,MAAP,8BACLjO,IAAI,KAEJ,kBAAC,GAAD,QAGJ,uBACEkO,OAAQ,KACR7B,MAAO,QACP8B,QAAS9D,EACT+D,SAAU,WAAQ,EAAK9H,SAAS,CAAE+D,cAAc,KAChDjD,MAAO,4BAGP,uCACMzE,GADN,CAEEkB,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUa,KAAKsG,YACfrG,KAAM,UAEN,sBAAMC,KAAN,CACEC,MAAM,eACNN,KAAK,WACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCAEnC,6BAEF,sBAAMJ,KAAN,CACEC,MAAM,qBACNN,KAAK,UACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2CAEnC,6BAGF,sBAAMJ,KAAN,CACEC,MAAM,eACNN,KAAK,WACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCAEnC,6BAEF,sBAAMJ,KAASnB,GACb,uBAAQX,KAAK,UAAUoC,SAAS,UAAhC,mBAMN,uBACE0J,OAAQ,KACR7B,MAAO,QACP8B,QAASrD,EACTsD,SAAU,WAAQ,EAAK9H,SAAS,CAAEwE,iBAAiB,KACnD1D,MAAO,4BAGP,uCACMzE,GADN,CAEEkB,KAAK,WACLC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUa,KAAK+G,eACf9G,KAAM,UAEN,sBAAMC,KAAN,CACEC,MAAM,mDACNN,KAAK,OAEL,uBAAOqF,MAAO,MAAOmF,aAAc,MAAQC,UAAQ,KAErD,sBAAMpK,KAAN,CAAWC,MAAM,mDAAWN,KAAK,OAC/B,sBAAO0K,MAAP,CAAaF,aAAc,MACzB,sBAAOG,OAAP,CAActF,MAAM,MAApB,gBACA,sBAAOsF,OAAP,CAActF,MAAM,MAApB,gBACA,sBAAOsF,OAAP,CAActF,MAAM,MAApB,kBAGJ,sBAAMhF,KAAN,CAAWC,MAAM,MAAMN,KAAK,OACzB,6BAEH,sBAAMK,KAAN,CAAWC,MAAM,iBAAON,KAAK,QAC1B,6BAEH,sBAAMK,KAAN,CAAWC,MAAM,eAAKN,KAAK,MAAMO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCACpE,6BAEA,sBAAMJ,KAAN,CAAWC,MAAM,eAAKN,KAAK,MAAMO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCACpE,6BAEA,sBAAMJ,KAAN,CAAWC,MAAM,2BAAON,KAAK,YAAYO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iDAC5E,6BAEA,sBAAMJ,KAAN,CAAWC,MAAM,eAAKN,KAAK,UAAUO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qCACtE,6BAEF,sBAAMJ,KAAN,CAAWC,MAAM,2BAAON,KAAK,WAAWO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iDAC3E,6BAEA,sBAAMJ,KAAN,CAAWC,MAAM,2BAAON,KAAK,OAC3B,sBAAO0K,MAAP,CAAaF,aAAc,MACzB,sBAAOG,OAAP,CAActF,MAAM,MAApB,MACA,sBAAOsF,OAAP,CAActF,MAAM,MAApB,MACA,sBAAOsF,OAAP,CAActF,MAAM,MAApB,QAGJ,sBAAMhF,KAASnB,GACb,uBAAQX,KAAK,UAAUoC,SAAS,UAAhC,wB,GArWWC,IAAMC,WA0YdE,gBA3BS,SAACjB,GACvB,OAAO,eAAKA,MAGa,SAAC9B,GAC1B,MAAO,CACLqI,YAAa,SAACrF,EAAGC,GNhYM,IAACjE,EAAKmB,EMiY3BH,GNjYsBhB,EMiYDgE,ENjYM7C,EMiYH8C,ENhYnB,SAACjD,GAAD,OAAYD,EAAaC,EAASL,EAAeX,EAAKmB,EDEpC,qBOgYzB2I,QAAS,SAAC9F,EAAGC,GNhYM,IAACjE,EAAKmB,EMiYvBH,GNjYkBhB,EMiYDgE,ENjYM7C,EMiYH8C,ENhYf,SAACjD,GAAD,OAAYD,EAAaC,EAASJ,EAAWZ,EAAKmB,EDGrC,gBO+XpBmK,WAAY,SAACtH,EAAGC,GN7XM,IAACjE,EAAKmB,EM8X1BH,GN9XqBhB,EM8XDgE,EN9XM7C,EM8XH8C,EN7XlB,SAACjD,GAAD,OAAYD,EAAaC,EAASF,EAAcd,EAAKmB,EDKrC,mBO0XvBS,OAAQ,SAACoC,EAAGC,GACVjD,EAASY,EAAOoC,EAAGC,KAErBsI,WAAY,SAACvI,EAAGC,GNtYM,IAACjE,EAAKmB,EMuY1BH,GNvYqBhB,EMuYDgE,ENvYM7C,EMuYH8C,ENtYlB,SAACjD,GAAD,OAAYD,EAAaC,EAASH,EAAcb,EAAKmB,EDIrC,mBOoYvB6J,WAAY,SAAChH,EAAGC,GFlXO,IAACjE,EAAKmB,EEmX3BH,GFnXsBhB,EEmXFgE,EFnXO7C,EEmXJ8C,EFlXlB,SAACjD,GAAD,OAAYD,EAAaC,EAASuD,EAAqBvE,EAAKmB,ECf5C,sBCsYZ4C,CAA6CoF,I,GC3Z/BuB,OAAOkD,SAL5BC,G,GAAAA,sBAGNC,I,GAFAC,2B,GACAC,yB,GACAF,sBACAG,G,GAAAA,wBACAC,G,GAAAA,uBACEC,GAAgB,GACdC,G,kDACJ,aAAe,IAAD,8BACZ,gBAQF/L,kBAAoB,WAAO,IACjBoI,EAASC,OAATD,KACJjI,EAAI,eACR,EAAK6D,IAAM,IAAIoE,EAAK4D,IAAI,UACxB,EAAKhI,IAAIiI,cAAc,IAAI7D,EAAKS,MAAM,QAAS,QAAS,IACxD,EAAK7E,IAAIkI,wBACT,IAAInL,EAAO,IAAIqH,EAAK+D,KAAK,GAAI,IACzBC,EAAe,IAAIhE,EAAKiE,kBAAkB,CAACC,OAAQV,KACvD,EAAK5H,IAAIuI,WAAWH,GACpB,EAAKpI,IAAIuI,WAAW,IAAInE,EAAKoE,gBAAgB,CACzCF,OAAQb,GACR3L,OAAQiB,EAMP0L,cAAc,WACbtM,EAAK2I,2BAGX,EAAK4D,eACL,EAAK5D,uBACL,EAAK1I,MAAMZ,mBAAmB,IAAG,YAAW,IAAT7B,EAAQ,EAARA,KAChC,EAAKyF,SAAS,CAACgG,YAAYzL,QAjClB,EAuCd+O,aAAe,WACb,EAAK1I,IAAI2I,iBAAiB,WAAW,WACnC,EAAK7D,0BAEP,EAAK9E,IAAI2I,iBAAiB,WAAW,SAACC,GACpCvN,QAAQC,IAAI,qBAAqBsN,EAAEC,OAAOC,WACvCF,EAAEC,OAAOC,WAAa,GACvB,EAAK1J,SAAS,CAAC2J,eAAc,IAE7B,EAAK3J,SAAS,CAAC2J,eAAc,IAE/B,EAAKjE,2BAlDK,EAyDdA,qBAAuB,WACrB,EAAK1I,MAAM4M,gBAAgB,EAAKC,gBAAgB,SAACzP,GACxCA,EAAIG,MAA2B,GAAnBH,EAAIG,KAAKuP,QAC1B,IAAQC,KAAK,kFAEf,EAAK/J,SAAS,CAAE8F,YAAa1L,EAAIG,MAAQ,SA9D/B,EAsEdsP,aAAe,WACb,IAAIG,EAAK,EAAKpJ,IAAIqJ,YACdC,EAAOF,EAAGG,eACVC,EAAOJ,EAAGK,eACd,MAAO,CACLC,OAAQJ,EAAKrF,IACb0F,OAAQH,EAAKvF,IACb2F,OAAQN,EAAKnF,IACb0F,OAAQL,EAAKrF,MA9EH,EAoFd2F,aAAe,SAAC5E,EAAY6D,GAC1B,IAAO7D,GAAqC,GAAtBA,EAAYgE,OAChC,MAAO,GAFmC,IAIpC9E,EAASC,OAATD,KACJjI,EAAI,eACJ4N,EAAS,GACb,EAAK/J,IAAIgK,gBACT9E,EAAYlF,KAAI,SAAA/E,GACd,IAAIgP,EAAQ,IAAI7F,EAAKS,MAAM5J,EAAE+I,KAAM/I,EAAEiJ,MAGrC,GAFA+F,EAAMC,QAAUjP,EAChB8O,EAAOhR,KAAKkR,GACTlB,EAAe,CAChB,IAAItD,EAAK,EAAKzF,IAAImK,WAAW,IAAI/F,EAAKgG,OAAOH,EAAMhP,EAAEoP,UAAU,CAACC,UAAU,UAAWC,aAAc,EAAGC,YAAa,GAAKC,cAAe,GAAIC,eAAc,KACzJ5C,GAAc/O,KAAK0M,OAIvB,IAAIkF,EAAU,CACZC,MAAOpD,GACPzK,KAAK8K,GACLrG,MAAO,OAELqJ,EAAkB,IAAIzG,EAAK0G,gBAAgBf,EAAQY,GACnDI,EAAO,CACT5F,MAAQ,IACRxC,OAAQ,IACRzC,MAAQ,4BAWV,OARA2K,EAAgBlC,iBAAiB,SAAS,SAAUC,GAClD,IAAIsB,EAAUtB,EAAEqB,MAAMC,QAClBc,EAAO,wCAAgBd,EAAQe,QAAxB,mBAA0Cf,EAAQnG,IAAlD,mBAAgEmG,EAAQpG,IAAxE,mBAAsFoG,EAAQgB,IAA9F,kBAA2GhB,EAAQiB,KAAnH,wCAAmIjB,EAAQG,UAA3I,8CAAiKH,EAAQhP,KAAzK,sBAEPkQ,EAAa,IAAIhH,EAAKiH,WAAWL,EAASD,GAC9C5O,EAAK6D,IAAIsL,eAAeF,EAAWxC,EAAEqB,UAEvC,EAAKjK,IAAImK,WAAWU,GACb,IAxHP,EAAKpO,MAAQ,CACXyI,YAAa,GACbqG,SAAS,IACTnG,YAAY,KACZ2D,eAAc,GANJ,E,qDA8HJ,IAAD,EACoDjM,KAAKL,MAAxDyI,EADD,EACCA,YAAYqG,EADb,EACaA,SAASnG,EADtB,EACsBA,YAAY2D,EADlC,EACkCA,cACzC,OACE,6BACE,yBAAK5I,GAAG,SAASzD,UAAU,SAASgG,MAAO,CAAC3B,KAAKwK,KACjD,kBAAC,GAAD,CAAUzG,qBAAsBhI,KAAKgI,qBAAsB9E,IAAKlD,KAAKkD,IAAKoF,YAAaA,EAAaF,YAAaA,EAAaC,MAAOoG,IACpIzO,KAAKgN,aAAa5E,EAAY6D,Q,GArInBxL,IAAMC,WA6JXC,eAAWC,aAlBF,SAACjB,GACvB,OAAO,eAAKA,MAGa,SAAC9B,GAC1B,MAAO,CACLqO,gBAAiB,SAACrL,EAAGC,GHxIO,IAACjE,EAAKmB,EGyIhCH,GHzI2BhB,EGyIFgE,EHzIO7C,EGyIJ8C,EHxIvB,SAACjD,GAAD,OAAYD,EAAaC,EAASwD,EAAmBxE,EAAKmB,ECenC,0BE2H9BU,mBAAoB,SAACmC,EAAGC,GACtBjD,EAASa,EAAmBmC,EAAGC,KAEjCrC,OAAQ,SAACoC,EAAGC,GACVjD,EAASY,EAAOoC,EAAGC,QAKCF,CAA6CqK,KCpKjEyD,G,4MAEJxP,kBAAoB,WACV,eACRyP,aAAY,WACV,EAAKrP,MAAMZ,mBAAmB,IAAG,SAACR,SAGlC,M,uDAIF,OAAQ,kBAAC,IAAM0Q,SAAP,SAAiB,yBAAKhP,UAAW,cAErC,kBAAC,IAAD,CAAOiP,KAAM,SAAanG,OAAQ,SAACpJ,GAAD,OAAS,kBAAC,EAAUA,MACtD,kBAAC,IAAD,CAAOuP,KAAM,SAAanG,OAAQ,SAACpJ,GAAD,OAAS,kBAAC,GAAUA,OAHlD,S,GAZOmB,IAAMC,WAiCVC,eAAWC,aAZF,SAACjB,GACrB,OAAO,eAAKA,MAGW,SAAC9B,GACxB,MAAO,CACLa,mBAAoB,SAACmC,EAAGC,GAClBjD,EAASa,EAAmBmC,EAAGC,QAKjBF,CAA6C8N,KC9BnDI,QACW,cAA7BvH,OAAOwH,SAASC,UAEe,UAA7BzH,OAAOwH,SAASC,UAEhBzH,OAAOwH,SAASC,SAASC,MACvB,2D,uBCfAC,I,QAAoD,GAAvC3H,OAAOwH,SAASI,KAAKC,QAAQ,QAAc,yDAA0D,iCCD3GC,GAAaC,aAAgB,CACtCC,KDEgB,WAAyB,IAAxB5P,EAAuB,uDAAf,GAAI6P,EAAW,uCACxC,OAAQA,EAAOpR,MACX,IXQuB,kBWDnB,OANGmJ,OAAOwH,SAASI,MAAQD,KACvB,IAAQ5Q,MAAM,4BACdsE,YAAW,WACP2E,OAAOwH,SAASI,KAAKD,KACvB,MAEC,eAAKvP,EAAZ,CAAmB9C,KAAM2S,EAAO3S,OACpC,IXI8B,yBWF1B,OADA,IAAQyB,MAAM,8CACP,eAAKqB,GAChB,QACI,OAAOA,MEXb8P,GAAgBC,EAAQ,KAAWC,kBACnCC,GCJYC,aACVR,GACAS,aAAgBC,ODGlBvQ,GAAUiQ,KAChBO,IAAStH,OAAO,kBAAC,IAAD,CAAWkH,MAAOA,IAChC,kBAAC,IAAD,CAAQpQ,QAASA,IACX,kBAAC,IAAD,CAAOqP,KAAM,IAAOnG,OAAQ,SAACpJ,GAAD,OAAS,kBAAC,GAAQA,QAE1CmE,SAASC,eAAe,SHoH9B,kBAAmBuM,WACrBA,UAAUC,cAAcC,MACrB1T,MAAK,SAAA2T,GACJA,EAAaC,gBAEdhS,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMgC,a","file":"static/js/main.db4c13fe.chunk.js","sourcesContent":["export const get = (url, params) => {\r\n    if (params) {\r\n        let paramsArray = [];\r\n        //拼接参数\r\n        Object.keys(params).forEach(key => paramsArray.push(key + '=' + params[key]))\r\n        if (url.search(/\\?/) === -1) {\r\n            url += '?' + paramsArray.join('&')\r\n        } else {\r\n            url += '&' + paramsArray.join('&')\r\n        }\r\n    }\r\n    return fetch(url, {\r\n        method: 'get',\r\n        credentials: 'include',\r\n        headers: {\r\n            accept: 'application/json'\r\n        }\r\n    }).then(res => res.json())\r\n};\r\nexport const post = (url, data) => {\r\n    return fetch(url, {\r\n        method: 'post',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            accept: 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n};","import {post ,get} from './index';\r\n\r\nconst URL = 'http://localhost:8080/station';\r\n \r\n\r\n//登录接口\r\nexport const logins = (userInfo) =>{\r\n  return post(URL+`/login?username=${userInfo.username}&password=${userInfo.password}`,{})\r\n};\r\n//登出接口\r\nexport const Apilogout = () =>{\r\n  return post(URL+`/logout`,{})\r\n};\r\n//获取系统当前登录用户信息\r\nexport const ApigetCurrentUserInfo=()=>{\r\n  return get(URL+`/api/v1/user/getCurrentUserInfo`,{});\r\n}\r\n//获取\r\nexport const ApigetUserList=()=>{\r\n  return get(URL+`/api/v1/user/list`,{});\r\n}\r\n\r\nexport const ApiAddUser=(data)=>{\r\n  return post(URL+`/api/v1/user/addUser`,data);\r\n}\r\n\r\nexport const ApiDeleteUser=(data)=>{\r\n  return get(URL+`/api/v1/user/deleteUser`,data);\r\n}\r\n\r\nexport const ApiUpdateUser=(data)=>{\r\n  return get(URL+`/api/v1/user/updateUser`,data);\r\n}","import { ERROR_NOT_LOGIN,ERROR_SERVER_EXCEPTION } from '../redux/constants/userActionType'\r\n\r\nexport const commonAction = (dispatch,api,paramJson,callback,actionType)=>{\r\n    api(paramJson).then(response =>{\r\n        if(response.s && response.s === 2001) { \r\n            if(response.s == 2001) {\r\n                dispatch({\r\n                    type:ERROR_NOT_LOGIN,\r\n                    data:1\r\n                });\r\n                return;\r\n            }\r\n            if(response.s == 999) {\r\n                dispatch({\r\n                    type:ERROR_SERVER_EXCEPTION,\r\n                    data:1\r\n                });\r\n                return;\r\n            }\r\n            \r\n        }\r\n        dispatch({\r\n            type:actionType,\r\n            data:response\r\n        });\r\n        callback && callback(response);\r\n    }).catch(error=>{console.log('error',error)});\r\n}","/**\r\n * y用户登录\r\n */\r\nexport const USER_LOGIN = \"USER_LOGIN\"; \r\n/**\r\n * 用户登出\r\n */\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"; \r\n/**\r\n * 获取当前用户\r\n */\r\nexport const GET_CURRENT_USER = \"GET_CURRENT_USER\";\r\n/**\r\n * 用户未登录异常！\r\n */\r\nexport const ERROR_NOT_LOGIN = \"ERROR_NOT_LOGIN\";\r\n/**\r\n * 服务异常！\r\n */\r\nexport const ERROR_SERVER_EXCEPTION = \"ERROR_SERVER_EXCEPTION\";\r\n/**\r\n * 获取用户列表\r\n */\r\nexport const GET_USER_LIST = \"GET_USER_LIST\";\r\n/**\r\n * 添加用户\r\n */\r\nexport const ADD_USER = \"ADD_USER\";\r\n/**\r\n * 删除用户\r\n */\r\nexport const DELETE_USER = \"DELETE_USER\";\r\n/**\r\n * 更新用户\r\n */\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\n\r\n","import { USER_LOGIN,USER_LOGOUT,GET_CURRENT_USER,GET_USER_LIST,ADD_USER,DELETE_USER,UPDATE_USER } from '../constants/userActionType'\r\nimport { logins,\r\n    Apilogout,\r\n    ApigetCurrentUserInfo,\r\n    ApigetUserList,\r\n    ApiAddUser,\r\n    ApiDeleteUser,\r\n    ApiUpdateUser\r\n    } from '../../api/user';\r\nimport { commonAction } from '../../util/commonUtil'\r\n\r\nexport const login  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,logins,data,callback,USER_LOGIN);\r\n}\r\nexport const logout  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,Apilogout,data,callback,USER_LOGOUT);\r\n}\r\nexport const getCurrentUserInfo = (data,callback) =>{\r\n    return (dispatch)=>commonAction(dispatch,ApigetCurrentUserInfo,data,callback,GET_CURRENT_USER);\r\n}\r\nexport const getUserList = (data,callback) =>{\r\n    return (dispatch)=>commonAction(dispatch,ApigetUserList,data,callback,GET_USER_LIST);\r\n}\r\nexport const addUser = (data,callback) =>{\r\n    return (dispatch)=>commonAction(dispatch,ApiAddUser,data,callback,ADD_USER);\r\n}\r\nexport const deleteUser = (data,callback) =>{\r\n    return (dispatch)=>commonAction(dispatch,ApiDeleteUser,data,callback,DELETE_USER);\r\n}\r\nexport const updateUser = (data,callback) =>{\r\n    return (dispatch)=>commonAction(dispatch,ApiUpdateUser,data,callback,UPDATE_USER);\r\n}\r\n\r\n","import React from 'react';\r\nimport '../scss/index.scss';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { login } from '../redux/actions/userAction';\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n    }\r\n    componentDidMount = () => {\r\n       // console.log(' that.props.history', this.props.history);\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        let that = this;\r\n        this.props.login(values, (res) => {\r\n            that.props.history.push('/index');\r\n        });\r\n    }\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    }\r\n\r\n    render() {\r\n        return (<div className={'loginPage'}>\r\n            {<div className='sysName'>基站管理系统</div> }\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={this.onFinishFailed}\r\n                size={'large'}\r\n            >\r\n                <Form.Item\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: '请输入用户名!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: '请输入密码!' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n        </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (o, fn) => {\r\n            dispatch(login(o, fn));\r\n        }\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n","import { get,post } from './index';\r\n\r\nconst URL = 'http://localhost:8080/station/api/v1/baseStation';\r\n\r\n\r\nexport const ApigetList = (data) => {\r\n    return get(URL + `/list`, data);\r\n}\r\n\r\nexport const ApicountAllBaseStation = (data) => {\r\n    return get(URL + `/countAllBaseStation`, data);\r\n}\r\n\r\nexport const ApistatisticByProvince = (data) => {\r\n    return get(URL + `/statisticByProvince`, data);\r\n}\r\n\r\nexport const ApistatisticByType = (data) => {\r\n    return get(URL + `/statisticByType`, data);\r\n}\r\n\r\nexport const ApistatisticByPrecision = (data) => {\r\n    return get(URL + `/statisticByPrecision`, data);\r\n}\r\n\r\nexport const ApistatisticByMnc = (data) => {\r\n    return get(URL + `/statisticByMnc`, data);\r\n}\r\n\r\nexport const ApistatisticByDate = (data) => {\r\n    return get(URL + `/statisticByDate`, data);\r\n}\r\n\r\nexport const ApiupdateBaseStationInfo = (data) => {\r\n    return get(URL + `/updateBaseStationInfo`, data);\r\n}\r\n\r\nexport const ApiinsertBaseStation = (data) => {\r\n    return post(URL + `/insertBaseStation`, data);\r\n}\r\n\r\nexport const ApideleteBaseStation = (data) => {\r\n    return get(URL + `/deleteBaseStation`, data);\r\n}\r\nexport const ApigetListByBounds = (data) => {\r\n    return get(URL + `/getListByBounds`, data);\r\n}","import React from 'react';\r\nimport '../../scss/index.scss';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { countAllBaseStation, statisticByDate, statisticByType, statisticByMnc, statisticByPrecision,statisticByProvince } from '../../redux/actions/stationAction';\r\n// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts';\r\n// 引入柱状图\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/pie';\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nclass Datareport extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            timeData: {},\r\n            staTypeData: {},\r\n            staMncData: {},\r\n            staPrecisionData: {}\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        // console.log(' that.props.history', this.props.history);\r\n        this.renderDate();\r\n    }\r\n    /**\r\n     * 时间趋势图\r\n     */\r\n    renderDate = () => {\r\n        let that = this;\r\n        this.props.statisticByDate({}, ({ data }) => {\r\n            let xyData = that.getXyData(data, 'update_date', 'cnt');\r\n            that.renderBar('基站数据时间统计', 'dateTrend', xyData.x, xyData.y, '数量');\r\n        });\r\n        this.props.statisticByProvince({},({data})=>{\r\n            let tempData = data.sort((a,b)=>{return a.cnt-b.cnt})\r\n            let xyData = that.getXyData(tempData, 'province', 'cnt');\r\n            this.renderAreaStatic('区域统计','areaStat',xyData.x,xyData.y,'数量');\r\n        });\r\n        this.props.statisticByType({}, ({ data }) => {\r\n            let xyData = that.getXyData(data, 'type', 'cnt');\r\n            this.setState({ staTypeData: xyData });\r\n            this.props.statisticByMnc({}, ({ data }) => {\r\n                let xyData = that.getXyData(data, 'mnc', 'cnt');\r\n                this.setState({ staMncData: xyData });\r\n                this.props.statisticByPrecision({}, ({ data }) => {\r\n                    let xyData = that.getXyData(data, 'precision', 'cnt');\r\n                    this.setState({ staPrecisionData: xyData });\r\n                    setTimeout(() => {\r\n                        const { staTypeData, staMncData, staPrecisionData } = this.state;\r\n                        this.renderPie('typePie', staTypeData, staMncData, staPrecisionData);\r\n                    }, 500);\r\n                });\r\n            });\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    getXyData = (data, xKey, yKey) => {\r\n        let xData = [];\r\n        let yData = [];\r\n        data.map(d => {\r\n            xData.push(d[xKey]);\r\n            yData.push(d[yKey]);\r\n        });\r\n        return {\r\n            x: xData,\r\n            y: yData\r\n        }\r\n    }\r\n\r\n    renderAreaStatic = (title, id, xData, yData, yName) => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById(id));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title: {\r\n                text: title,\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'shadow'\r\n                }\r\n            },\r\n            grid: {\r\n                left: '2%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                type: 'value',\r\n                boundaryGap: [0, 0.01]\r\n            },\r\n            yAxis: {\r\n                type: 'category',\r\n                data: xData\r\n            },\r\n            series: [\r\n                {\r\n                    name: yName,\r\n                    type: 'bar',\r\n                    data:yData\r\n                } \r\n            ]\r\n        });\r\n    }\r\n\r\n    renderBar = (title, id, xData, yData, yName) => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById(id));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title: { text: title },\r\n            tooltip: {},\r\n            xAxis: {\r\n                data: xData\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: yName,\r\n                type: 'bar',\r\n                itemStyle: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0, 0, 0, 1,\r\n                        [\r\n                            { offset: 0, color: '#83bff6' },\r\n                            { offset: 0.5, color: '#188df0' },\r\n                            { offset: 1, color: '#188df0' }\r\n                        ]\r\n                    )\r\n                },\r\n                emphasis: {\r\n                    itemStyle: {\r\n                        color: new echarts.graphic.LinearGradient(\r\n                            0, 0, 0, 1,\r\n                            [\r\n                                { offset: 0, color: '#2378f7' },\r\n                                { offset: 0.7, color: '#2378f7' },\r\n                                { offset: 1, color: '#83bff6' }\r\n                            ]\r\n                        )\r\n                    }\r\n                },\r\n                data: yData\r\n            }, {\r\n                name: yName,\r\n                type: 'line',\r\n                data: yData\r\n            }]\r\n        });\r\n    }\r\n\r\n    renderPie = (id, staTypeData, staMncData, staPrecisionData) => {\r\n\r\n        function getPieData(staData) {\r\n            let pieData = [];\r\n            staData.x.map((x, i) => {\r\n                pieData.push({ value: staData.y[i], name: x });\r\n            });\r\n            return pieData;\r\n        }\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById(id));\r\n        let redius = '55%';\r\n        let center = ['50%', '40%'];\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title: [\r\n                {\r\n                    text: '各维度统计'\r\n                }, {\r\n                    subtext: '基站类型统计',\r\n                    left: '16.67%',\r\n                    top: '60%',\r\n                    textAlign: 'center'\r\n                }, {\r\n                    subtext: '所属运营商统计',\r\n                    left: '50%',\r\n                    top: '60%',\r\n                    textAlign: 'center'\r\n                }, {\r\n                    subtext: '作用范围统计',\r\n                    left: '83.33%',\r\n                    top: '60%',\r\n                    textAlign: 'center'\r\n                }\r\n            ],\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            }, \r\n            series: [\r\n                {\r\n                    name: '基站类型统计',\r\n                    type: 'pie',\r\n                    radius: redius,\r\n                    center: center,\r\n                    data: getPieData(staTypeData),\r\n                    animation: false,\r\n                    label: {\r\n                        show: false\r\n                    },\r\n                    left: 0,\r\n                    right: '66.6667%',\r\n                    top: 0,\r\n                    bottom: 0\r\n                }, {\r\n                    name: '所属运营商统计',\r\n                    type: 'pie',\r\n                    radius: redius,\r\n                    center: center,\r\n                    data: getPieData(staMncData),\r\n                    animation: false,\r\n                    label: {\r\n                        show: false\r\n                    },\r\n                    left: '33.3333%',\r\n                    right: '33.3333%',\r\n                    top: 0,\r\n                    bottom: 0\r\n                }, {\r\n                    name: '作用范围统计',\r\n                    type: 'pie',\r\n                    radius: redius,\r\n                    center: center,\r\n                    data: getPieData(staPrecisionData),\r\n                    animation: false,\r\n                    label: {\r\n                        show: false\r\n                    },\r\n                    left: '66.6667%',\r\n                    right: 0,\r\n                    top: 0,\r\n                    bottom: 0\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { staTypeData, staMncData, staPrecisionData } = this.state;\r\n        return (<div className={'dataReport'}>\r\n            <div style={{ height: 330 }} className='echarts-div' id='areaStat'></div>\r\n            <div className='echarts-div' id='dateTrend'></div>\r\n            <div style={{ height: 200 }} className='echarts-div' id='typePie'></div>\r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        statisticByDate: (o, fn) => {\r\n            dispatch(statisticByDate(o, fn));\r\n        },\r\n        statisticByType: (o, fn) => {\r\n            dispatch(statisticByType(o, fn));\r\n        },\r\n        statisticByMnc: (o, fn) => {\r\n            dispatch(statisticByMnc(o, fn));\r\n        },\r\n        statisticByPrecision: (o, fn) => {\r\n            dispatch(statisticByPrecision(o, fn));\r\n        },\r\n        statisticByProvince: (o, fn) => {\r\n            dispatch(statisticByProvince(o, fn));\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Datareport));\r\n","import { commonAction } from '../../util/commonUtil'\r\nimport { GET_LIST_BY_BOUNDS,\r\n    COUNT_ALL_STATION,\r\n    STATISTIC_BY_PROVINCE,\r\n    STATISTIC_BY_TYPE,\r\n    STATISTIC_BY_PRECISION,\r\n    STATISTIC_BY_MNC,\r\n    STATISTIC_BY_DATE,\r\n    UPDATE_STATION,\r\n    ADD_STATION,\r\n    DELETE_STATION\r\n    \r\n } from '../constants/stationActionType';\r\nimport { ApigetListByBounds,\r\nApicountAllBaseStation,\r\nApistatisticByProvince,\r\nApistatisticByType,\r\nApistatisticByPrecision,\r\nApistatisticByMnc,\r\nApistatisticByDate,\r\nApiupdateBaseStationInfo,\r\nApiinsertBaseStation,\r\nApideleteBaseStation\r\n } from '../../api/baseStation';\r\n\r\nexport const getListByBounds  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApigetListByBounds,data,callback,GET_LIST_BY_BOUNDS);\r\n}\r\nexport const countAllBaseStation  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApicountAllBaseStation,data,callback,COUNT_ALL_STATION);\r\n}\r\nexport const statisticByProvince  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApistatisticByProvince,data,callback,STATISTIC_BY_PROVINCE);\r\n}\r\nexport const statisticByType  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApistatisticByType,data,callback,STATISTIC_BY_TYPE);\r\n}\r\nexport const statisticByPrecision  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApistatisticByPrecision,data,callback,STATISTIC_BY_PRECISION);\r\n}\r\nexport const statisticByMnc  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApistatisticByMnc,data,callback,STATISTIC_BY_MNC);\r\n}\r\nexport const statisticByDate  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApistatisticByDate,data,callback,STATISTIC_BY_DATE);\r\n}\r\nexport const updateBaseStationInfo  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApiupdateBaseStationInfo,data,callback,UPDATE_STATION);\r\n}\r\nexport const addStation  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApiinsertBaseStation,data,callback,ADD_STATION);\r\n}\r\nexport const deleteStation  = (data,callback)=>{\r\n    return (dispatch)=>commonAction(dispatch,ApideleteBaseStation,data,callback,DELETE_STATION);\r\n}","/**\r\n * 获取基站列表\r\n */\r\nexport const STATION_LIST = \"STATION_LIST\"; \r\n/**\r\n * 统计基站总数\r\n */\r\nexport const COUNT_ALL_STATION = \"COUNT_ALL_STATION\"; \r\n/**\r\n * 根据基站所在省统计基站\r\n */\r\nexport const STATISTIC_BY_PROVINCE = \"STATISTIC_BY_PROVINCE\"; \r\n/**\r\n * 根据基站类型统计基站\r\n */\r\nexport const STATISTIC_BY_TYPE = \"STATISTIC_BY_TYPE\"; \r\n/**\r\n * 根据基站作用范围统计基站\r\n */\r\nexport const STATISTIC_BY_PRECISION = \"STATISTIC_BY_PRECISION\"; \r\n/**\r\n * 根据MNC统计基站\r\n */\r\nexport const STATISTIC_BY_MNC = \"STATISTIC_BY_MNC\"; \r\n/**\r\n * 根据入库日期统计基站\r\n */\r\nexport const STATISTIC_BY_DATE = \"STATISTIC_BY_DATE\"; \r\n/**\r\n * 更新基站数据\r\n */\r\nexport const UPDATE_STATION = \"UPDATE_STATION\"; \r\n/**\r\n * 添加基站\r\n */\r\nexport const ADD_STATION = \"ADD_STATION\"; \r\n/**\r\n * 删除基站\r\n */\r\nexport const DELETE_STATION = \"DELETE_STATION\"; \r\n\r\nexport const GET_LIST_BY_BOUNDS = \"GET_LIST_BY_BOUNDS\";","import React from 'react';\r\nimport '../../scss/index.scss';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, InputNumber, Tabs, Table, Switch, Button, Modal, Message, Radio } from 'antd';\r\nimport { getUserList, addUser, updateUser, deleteUser, logout } from '../../redux/actions/userAction';\r\nimport { addStation } from '../../redux/actions/stationAction';\r\nimport {\r\n  TeamOutlined,\r\n  IdcardOutlined,\r\n  SmileOutlined,\r\n  LockOutlined,\r\n  AreaChartOutlined,\r\n  GlobalOutlined,\r\n  LogoutOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport Datareport from './datareport'\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 12 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\nconst { TabPane } = Tabs;\r\nconst MncMap = {//00移动 01联通 11电信\r\n  '00': '移动',\r\n  '01': '联通',\r\n  '11': '电信'\r\n}\r\n\r\nclass Leftmenu extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userList: [],\r\n      menuList: [],\r\n      addUserModal: false,\r\n      addStationModal: false\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    this.updateUserList();\r\n  }\r\n\r\n  updateUserList = () => {\r\n    this.props.getUserList({}, ({ data }) => {\r\n      this.setState({ userList: data || [] });\r\n    });\r\n  }\r\n\r\n  handleAdd = () => {\r\n    this.setState({ addUserModal: true });\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.logout({}, () => {\r\n\r\n    });\r\n  }\r\n\r\n  updateUserInfo(id, key, val) {\r\n    if (id == 1) {\r\n      Message.error(\"超级管理员信息不可编辑！\");\r\n      return;\r\n    }\r\n    this.props.updateUser({ id: id, key: key, val: val }, () => {\r\n      this.updateUserList();\r\n    });\r\n  }\r\n\r\n  addUserFunc = (values) => {\r\n    const { userList } = this.state;\r\n    let flag = true;\r\n    userList.map(u => {\r\n      if (u.account == values.username.trim()) {\r\n        flag = false;\r\n      }\r\n    });\r\n    if (!!!flag) {\r\n      Message.error(\"用户名已存在！\");\r\n      return;\r\n    }\r\n    this.props.addUser(values, (rsp) => {\r\n      //console.log('adduser-rsp',rsp);\r\n      this.updateUserList();\r\n    });\r\n    this.setState({ addUserModal: false });\r\n  }\r\n\r\n  handleAddStation = () => {\r\n    this.setState({ addStationModal: true });\r\n  }\r\n  addStationFunc = (values) => {\r\n    if(!!!values.mnc) {\r\n      values.mnc = '00';\r\n    }\r\n    if(!!!values.type) {\r\n      values.type = '2G';\r\n    }\r\n    values.mcc='460';\r\n    values.olng= values.lng;\r\n    values.olat= values.lat;\r\n    const { BMap } = window\r\n    let d = new Date();\r\n    values.updateDate= d.getFullYear()+'-'+(d.getMonth()+1)+'-'+d.getDate();\r\n    this.props.addStation(values,(rsp)=>{\r\n      setTimeout(()=>{\r\n        this.props.map.panTo(new BMap.Point(values.lng,values.lat)); \r\n        setTimeout(()=>{\r\n          this.props.showStationByMapView();\r\n        },500);\r\n      },1500);\r\n      this.setState({ addStationModal: false });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { stationList, width, currentUser } = this.props;\r\n    const { userList, addUserModal, addStationModal } = this.state;\r\n    const STATION_LIST_COLUMNS = [\r\n      {\r\n        title: '移动设备国家代码',\r\n        dataIndex: 'mcc',\r\n        key: 'mcc',\r\n        fixed: 'left',\r\n        width: 100,\r\n        render: () => {\r\n          return '中国';\r\n        }\r\n      },\r\n      {\r\n        title: '移动设备网络代码',\r\n        dataIndex: 'mnc',\r\n        key: 'mnc',\r\n        fixed: 'left',\r\n        width: 100,\r\n        render: (t) => {\r\n          return MncMap[t] || '未知'\r\n        }\r\n      },\r\n      {\r\n        title: '小区ID',\r\n        dataIndex: 'cell',\r\n        key: 'cell',\r\n        width: 100\r\n      },\r\n      {\r\n        title: '覆盖范围',\r\n        dataIndex: 'precision',\r\n        key: 'precision',\r\n        width: 100,\r\n        render: (t) => {\r\n          return `${t}米`\r\n        }\r\n      },\r\n      {\r\n        title: '基站地址',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        width: 500\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'operation',\r\n        key: 'operation',\r\n        width: 100,\r\n        render: (text, record) => {\r\n          return (<Button size={'small'} danger>删除</Button>)\r\n        }\r\n      }\r\n    ];\r\n    const USER_LIST_COLUMNS = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n        fixed: 'left',\r\n        width: 100\r\n      },\r\n      {\r\n        title: '账号',\r\n        dataIndex: 'account',\r\n        key: 'account',\r\n        fixed: 'left',\r\n        width: 100\r\n      },\r\n      {\r\n        title: '密码',\r\n        dataIndex: 'password',\r\n        key: 'password',\r\n        width: 80,\r\n        render: () => {\r\n          return (<LockOutlined />);\r\n        }\r\n      },\r\n      {\r\n        title: '是否是管理员',\r\n        dataIndex: 'roleId',\r\n        key: 'roleId',\r\n        width: 100,\r\n        render: (text, record) => {\r\n          return (<Switch size={'small'} checked={text == 1} onClick={(c) => {\r\n            this.updateUserInfo(record.id, 'admin', c);\r\n          }} />)\r\n        }\r\n      },\r\n      {\r\n        title: '是否启用',\r\n        dataIndex: 'enabled',\r\n        key: 'enabled',\r\n        width: 100,\r\n        render: (text, record) => {\r\n          return (<Switch size={'small'} checked={text} onClick={(c) => {\r\n            this.updateUserInfo(record.id, 'enabled', c ? 1 : 0);\r\n          }} />)\r\n        }\r\n      },\r\n      {\r\n        title: '是否锁定',\r\n        dataIndex: 'accountNonLocked',\r\n        key: 'accountNonLocked',\r\n        width: 100,\r\n        render: (text, record) => {\r\n          return (<Switch size={'small'} checked={!!!text} onClick={(c) => {\r\n            this.updateUserInfo(record.id, 'account_not_locked', c ? 0 : 1);\r\n          }} />)\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'operation',\r\n        key: 'operation',\r\n        width: 100,\r\n        render: (text, record) => {\r\n          return (<Button onClick={() => {\r\n            if (record.id == 1) {\r\n              Message.error(\"超级管理员信息不可编辑！\");\r\n              return;\r\n            }\r\n            this.props.deleteUser({ userId: record.id }, () => {\r\n              this.updateUserList();\r\n            });\r\n          }} size={'small'} danger>删除</Button>)\r\n        }\r\n      }\r\n    ];\r\n    const pagination = {\r\n      size: 'small'\r\n    }\r\n    stationList.map((s, i) => {\r\n      s['key'] = i;\r\n    })\r\n    return (<div className={'leftMenu'} style={{ width: width }}>\r\n      <div className={\"title\"}>基站信息管理系统 <span className='loginInfo'>当前登录用户:{currentUser && currentUser.username}<span className='logoutBtn' onClick={() => { this.logout() }}>[退出]</span></span></div>\r\n      <Tabs defaultActiveKey=\"1\" size={'large'}>\r\n        <TabPane\r\n          tab={<span> <TeamOutlined /> 用户管理 </span>}\r\n          key=\"1\"\r\n        >\r\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\r\n            添加\r\n          </Button>\r\n          <Table pagination={pagination} rowKey={(r) => { return r.id }} scroll={{ x: 460 }} columns={USER_LIST_COLUMNS} dataSource={userList} />\r\n        </TabPane>\r\n        <TabPane\r\n          tab={<span> <GlobalOutlined /> 基站管理 </span>}\r\n          key=\"3\"\r\n        >\r\n          <Button onClick={this.handleAddStation} type=\"primary\" style={{ marginBottom: 16 }}>\r\n            添加\r\n          </Button>\r\n          {/*<Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16, marginLeft: 10 }}>\r\n            上传\r\n          </Button>\r\n          <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16, marginLeft: 10 }}>\r\n            导出\r\n          </Button> */}\r\n          <Table pagination={pagination} scroll={{ x: 460 }} columns={STATION_LIST_COLUMNS} dataSource={stationList} />\r\n        </TabPane>\r\n        <TabPane\r\n          tab={<span> <AreaChartOutlined /> 数据报表 </span>}\r\n          key=\"4\"\r\n        >\r\n          <Datareport />\r\n        </TabPane>\r\n      </Tabs>\r\n      <Modal\r\n        footer={null}\r\n        width={'500px'}\r\n        visible={addUserModal}\r\n        onCancel={() => { this.setState({ addUserModal: false }); }}\r\n        title={'添加用户'}\r\n      >\r\n\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={this.addUserFunc}\r\n          size={'large'}\r\n        >\r\n          <Form.Item\r\n            label=\"姓名\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: '请输入姓名!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name=\"account\"\r\n            rules={[{ required: true, message: '请输入用户名!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"密码\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: '请输入密码!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              确认\r\n        </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        footer={null}\r\n        width={'500px'}\r\n        visible={addStationModal}\r\n        onCancel={() => { this.setState({ addStationModal: false }); }}\r\n        title={'添加基站'}\r\n      >\r\n\r\n        <Form\r\n          {...layout}\r\n          name=\"basicaaa\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={this.addStationFunc}\r\n          size={'large'}\r\n        >\r\n          <Form.Item\r\n            label=\"移动设备国家代码\"\r\n            name=\"mcc\"\r\n          >\r\n            <Input value={'460'} defaultValue={'460'}  disabled />\r\n          </Form.Item>\r\n          <Form.Item label=\"移动设备网络代码\" name=\"mnc\" >\r\n            <Radio.Group defaultValue={'00'}>\r\n              <Radio.Button value=\"00\">移动</Radio.Button>\r\n              <Radio.Button value=\"01\">联通</Radio.Button>\r\n              <Radio.Button value=\"11\">电信</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item label=\"LAC\" name=\"lac\"  >\r\n             <InputNumber /> \r\n             </Form.Item>\r\n          <Form.Item label=\"小区ID\" name=\"cell\"  >\r\n             <InputNumber />\r\n              </Form.Item>\r\n          <Form.Item label=\"经度\" name=\"lng\" rules={[{ required: true, message: '请输入经度!' }]} > \r\n          <InputNumber /> \r\n          </Form.Item>\r\n          <Form.Item label=\"纬度\" name=\"lat\" rules={[{ required: true, message: '请输入纬度!' }]} > \r\n          <InputNumber /> \r\n          </Form.Item>\r\n          <Form.Item label=\"覆盖范围\" name=\"precision\" rules={[{ required: true, message: '请输入覆盖范围!' }]} > \r\n          <InputNumber /> \r\n          </Form.Item>\r\n          <Form.Item label=\"地址\" name=\"address\" rules={[{ required: true, message: '请输入地址!' }]} >\r\n            <Input /> \r\n            </Form.Item>\r\n          <Form.Item label=\"归属城市\" name=\"province\" rules={[{ required: true, message: '请输入归属城市!' }]} > \r\n          <Input /> \r\n          </Form.Item>\r\n          <Form.Item label=\"基站类型\" name=\"mnc\" >\r\n            <Radio.Group defaultValue={'2G'}>\r\n              <Radio.Button value=\"2G\">2G</Radio.Button>\r\n              <Radio.Button value=\"3G\">3G</Radio.Button>\r\n              <Radio.Button value=\"4G\">4G</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              确认\r\n        </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUserList: (o, fn) => {\r\n      dispatch(getUserList(o, fn));\r\n    },\r\n    addUser: (o, fn) => {\r\n      dispatch(addUser(o, fn));\r\n    },\r\n    updateUser: (o, fn) => {\r\n      dispatch(updateUser(o, fn));\r\n    },\r\n    logout: (o, fn) => {\r\n      dispatch(logout(o, fn));\r\n    },\r\n    deleteUser: (o, fn) => {\r\n      dispatch(deleteUser(o, fn));\r\n    },\r\n    addStation: (o, fn) => {\r\n      dispatch(addStation(o, fn));\r\n    }\r\n\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leftmenu);\r\n","import React from 'react';\r\nimport '../scss/index.scss';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logout,getCurrentUserInfo } from '../redux/actions/userAction';\r\nimport { getListByBounds } from '../redux/actions/stationAction';\r\nimport { Message } from 'antd';\r\nimport Leftmenu from './module/leftmenu.jsx'\r\n\r\nconst { BMAP_POINT_SHAPE_STAR,\r\n  BMAP_POINT_SHAPE_WATERDROP,\r\n  BMAP_POINT_SHAPE_RHOMBUS,\r\n  BMAP_ANCHOR_TOP_LEFT,\r\n  BMAP_ANCHOR_BOTTOM_LEFT,\r\n  BMAP_POINT_SIZE_BIGGER } = window.mapConst\r\nlet circleOverlay = [];\r\nclass Index extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stationList: [],//基站数据\r\n      tabWidth:460,\r\n      currentUser:null,\r\n      showPrecision:true\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    const { BMap } = window;\r\n    let that = this;\r\n    this.map = new BMap.Map(\"allmap\"); // 创建Map实例\r\n    this.map.centerAndZoom(new BMap.Point(116.404, 39.915), 12); // 初始化地图,设置中心点坐标和地图级别\r\n    this.map.enableScrollWheelZoom();\r\n    let size = new BMap.Size(10, 20);\r\n    let scaleControl = new BMap.NavigationControl({anchor: BMAP_ANCHOR_BOTTOM_LEFT});\r\n    this.map.addControl(scaleControl);     \r\n    this.map.addControl(new BMap.CityListControl({\r\n        anchor: BMAP_ANCHOR_TOP_LEFT,\r\n        offset: size,\r\n        // 切换城市之前事件\r\n        // onChangeBefore: function(){\r\n        //    alert('before');\r\n        // },\r\n        // 切换城市之后事件\r\n         onChangeAfter:function(){\r\n          that.showStationByMapView();\r\n         }\r\n    }));\r\n    this.bindMapEvent();\r\n    this.showStationByMapView();\r\n    this.props.getCurrentUserInfo({},({data})=>{\r\n       this.setState({currentUser:data})\r\n    }); \r\n  }\r\n  /**\r\n   * 地图事件绑定\r\n   */\r\n  bindMapEvent = () => {\r\n    this.map.addEventListener('dragend', () => {\r\n      this.showStationByMapView();\r\n    });\r\n    this.map.addEventListener('zoomend', (e) => {\r\n      console.log('e.target.getZoom()',e.target.getZoom());\r\n      if(e.target.getZoom() >= 12) {\r\n        this.setState({showPrecision:true});\r\n      } else {\r\n        this.setState({showPrecision:false});\r\n      }\r\n      this.showStationByMapView();\r\n    });\r\n  }\r\n \r\n  /**\r\n   * 显示视野内的基站\r\n   */\r\n  showStationByMapView = () => {\r\n    this.props.getListByBounds(this.getMapBounds(), (res) => {\r\n      if (!!!res.data || res.data.length == 0) {\r\n        Message.warn('当前地图视野内无基站数据！');\r\n      }\r\n      this.setState({ stationList: res.data || [] });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * 获取地图视野边界\r\n   */\r\n  getMapBounds = () => {\r\n    let bs = this.map.getBounds();   //获取可视区域\r\n    let bssw = bs.getSouthWest();   //可视区域左下角\r\n    let bsne = bs.getNorthEast();   //可视区域右上角\r\n    return {\r\n      minLon: bssw.lng,\r\n      maxLon: bsne.lng,\r\n      minLat: bssw.lat,\r\n      maxLat: bsne.lat\r\n    }\r\n  }\r\n  /**\r\n   * 加载点\r\n   */\r\n  renderMarker = (stationList,showPrecision) => {\r\n    if (!!!stationList || stationList.length == 0) {\r\n      return '';\r\n    }\r\n    const { BMap } = window\r\n    let that = this;\r\n    let points = [];\r\n    this.map.clearOverlays();\r\n    stationList.map(s => {\r\n      let point = new BMap.Point(s.olng, s.olat);\r\n      point.station = s;\r\n      points.push(point);\r\n      if(showPrecision) {\r\n        let t =  this.map.addOverlay(new BMap.Circle(point,s.precision,{fillColor:\"#ffeb3b\", strokeWeight: 1 ,fillOpacity: 0.3, strokeOpacity: 0.3,enableEditing:false}));\r\n        circleOverlay.push(t);\r\n      }\r\n\r\n    });\r\n    let options = {\r\n      shape: BMAP_POINT_SHAPE_STAR,\r\n      size:BMAP_POINT_SIZE_BIGGER,\r\n      color: 'red'\r\n    }\r\n    let pointCollection = new BMap.PointCollection(points, options);\r\n    let opts = {\r\n      width : 300,     // 信息窗口宽度\r\n      height: 200,     // 信息窗口高度\r\n      title : \"基站信息\" , // 信息窗口标题\r\n    }\r\n    \r\n    pointCollection.addEventListener('click', function (e) {\r\n      let station = e.point.station;\r\n      let content = `<pre>基站地址:${station.address}\\r\\nMCC:${station.mcc}\\r\\nMNC:${station.mnc}\\r\\nLAT:${station.lac}\\r\\nCI:${station.cell}\\r\\n覆盖范围:${station.precision}米\\r\\n基站类型:${station.type}\\r\\n\r\n      </pre>`;\r\n      let infoWindow = new BMap.InfoWindow(content, opts);\r\n      that.map.openInfoWindow(infoWindow,e.point);\r\n    });\r\n    this.map.addOverlay(pointCollection);\r\n    return '';\r\n  }\r\n\r\n \r\n  render() {\r\n    const { stationList,tabWidth,currentUser,showPrecision } = this.state;\r\n    return (\r\n      <div>\r\n        <div id=\"allmap\" className=\"mapDiv\" style={{left:tabWidth}}></div>\r\n        <Leftmenu showStationByMapView={this.showStationByMapView} map={this.map} currentUser={currentUser} stationList={stationList} width={tabWidth}/>\r\n        {this.renderMarker(stationList,showPrecision)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getListByBounds: (o, fn) => {\r\n      dispatch(getListByBounds(o, fn));\r\n    },\r\n    getCurrentUserInfo: (o, fn) => {\r\n      dispatch(getCurrentUserInfo(o, fn));\r\n    },\r\n    logout: (o, fn) => {\r\n      dispatch(logout(o, fn));\r\n    }\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));\r\n","import React from 'react'; \nimport './scss/index.scss';\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\nimport Login from './components/login'\nimport Index from './components/index'\nimport { Route,HashRouter  } from 'react-router-dom';\nimport { getCurrentUserInfo } from './redux/actions/userAction';\nimport { withRouter } from \"react-router-dom\";\nclass App  extends React.Component{\n  \n  componentDidMount = ()=>{\n    let that = this;\n    setInterval(()=>{\n      this.props.getCurrentUserInfo({},(response)=>{\n       \n      }); \n    },2000);\n  }\n\n  render(){\n    return (<React.Fragment> <div className={'baseManage'}>\n      \n        <Route path={'/login'}    render={(props)=><Login {...props} /> }/>\n        <Route path={'/index'}    render={(props)=><Index {...props} /> } />  \n     \n    </div> </React.Fragment>)\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return { ...state };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      getCurrentUserInfo: (o, fn) => {\n            dispatch(getCurrentUserInfo(o, fn));\n        }\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ERROR_NOT_LOGIN,ERROR_SERVER_EXCEPTION } from '../constants/userActionType';\r\nimport { Message } from 'antd';\r\n//import {handleActions} from 'redux-actions';\r\nconst LOGIN_PATH = window.location.href.indexOf('3000')==-1 ? \"http://localhost:8080/station/static/index.html#/login\" :\"http://localhost:3000/#/login\";\r\n\r\nexport const user = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ERROR_NOT_LOGIN:   \r\n            if(window.location.href != LOGIN_PATH) {\r\n                Message.error('请先登录');\r\n                setTimeout(()=>{\r\n                    window.location.href=LOGIN_PATH;\r\n                },1000);\r\n            }\r\n            return { ...state, data: action.data };\r\n        case ERROR_SERVER_EXCEPTION:\r\n            Message.error('服务出现异常！');\r\n            return { ...state };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport {user} from './userReducer'\r\nexport const appReducer = combineReducers({\r\n    user\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureStore } from './redux/store/configureStore';\nimport {Provider} from 'react-redux'; \nimport { Route,HashRouter,Router  } from 'react-router';\n\nconst createHistory = require('history').createHashHistory;\nconst store = configureStore();\nconst history = createHistory();\nReactDOM.render(<Provider  store={store}>\n  <Router history={history}> \n        <Route path={'/'}   render={(props)=><App {...props} /> }/> \n  </Router>\n</Provider>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport promiseMiddleware from 'redux-promise';\r\nimport { appReducer } from '../reducers';\r\nexport const configureStore = ()=>{\r\n    const store = createStore(\r\n        appReducer,\r\n        applyMiddleware(thunk)\r\n    )\r\n    return store;\r\n}"],"sourceRoot":""}